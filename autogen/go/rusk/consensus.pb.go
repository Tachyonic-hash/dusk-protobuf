// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: consensus.proto

package rusk

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Call during block generation
type DistributeTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalReward           uint64       `protobuf:"fixed64,1,opt,name=total_reward,json=totalReward,proto3" json:"total_reward,omitempty"`
	ProvisionersAddresses []byte       `protobuf:"bytes,2,opt,name=provisioners_addresses,json=provisionersAddresses,proto3" json:"provisioners_addresses,omitempty"`
	BgPk                  *PublicKey   `protobuf:"bytes,3,opt,name=bg_pk,json=bgPk,proto3" json:"bg_pk,omitempty"`
	Tx                    *Transaction `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *DistributeTransaction) Reset() {
	*x = DistributeTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeTransaction) ProtoMessage() {}

func (x *DistributeTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeTransaction.ProtoReflect.Descriptor instead.
func (*DistributeTransaction) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{0}
}

func (x *DistributeTransaction) GetTotalReward() uint64 {
	if x != nil {
		return x.TotalReward
	}
	return 0
}

func (x *DistributeTransaction) GetProvisionersAddresses() []byte {
	if x != nil {
		return x.ProvisionersAddresses
	}
	return nil
}

func (x *DistributeTransaction) GetBgPk() *PublicKey {
	if x != nil {
		return x.BgPk
	}
	return nil
}

func (x *DistributeTransaction) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

// WithdrawFeesTransaction is the transaction for a Provisioner to withdraw the fees using the smart contract
type WithdrawFeesTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlsKey []byte       `protobuf:"bytes,1,opt,name=bls_key,json=blsKey,proto3" json:"bls_key,omitempty"`
	Sig    []byte       `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	Msg    []byte       `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Tx     *Transaction `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *WithdrawFeesTransaction) Reset() {
	*x = WithdrawFeesTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeesTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeesTransaction) ProtoMessage() {}

func (x *WithdrawFeesTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeesTransaction.ProtoReflect.Descriptor instead.
func (*WithdrawFeesTransaction) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{1}
}

func (x *WithdrawFeesTransaction) GetBlsKey() []byte {
	if x != nil {
		return x.BlsKey
	}
	return nil
}

func (x *WithdrawFeesTransaction) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *WithdrawFeesTransaction) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *WithdrawFeesTransaction) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

// Call from consensus
type SlashTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlsKey    []byte       `protobuf:"bytes,1,opt,name=bls_key,json=blsKey,proto3" json:"bls_key,omitempty"`
	Step      uint32       `protobuf:"varint,2,opt,name=step,proto3" json:"step,omitempty"`
	Round     uint64       `protobuf:"fixed64,3,opt,name=round,proto3" json:"round,omitempty"`
	FirstMsg  []byte       `protobuf:"bytes,4,opt,name=first_msg,json=firstMsg,proto3" json:"first_msg,omitempty"`
	FirstSig  []byte       `protobuf:"bytes,5,opt,name=first_sig,json=firstSig,proto3" json:"first_sig,omitempty"`
	SecondMsg []byte       `protobuf:"bytes,6,opt,name=second_msg,json=secondMsg,proto3" json:"second_msg,omitempty"`
	SecondSig []byte       `protobuf:"bytes,7,opt,name=second_sig,json=secondSig,proto3" json:"second_sig,omitempty"`
	Tx        *Transaction `protobuf:"bytes,8,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *SlashTransaction) Reset() {
	*x = SlashTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlashTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlashTransaction) ProtoMessage() {}

func (x *SlashTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlashTransaction.ProtoReflect.Descriptor instead.
func (*SlashTransaction) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{2}
}

func (x *SlashTransaction) GetBlsKey() []byte {
	if x != nil {
		return x.BlsKey
	}
	return nil
}

func (x *SlashTransaction) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *SlashTransaction) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *SlashTransaction) GetFirstMsg() []byte {
	if x != nil {
		return x.FirstMsg
	}
	return nil
}

func (x *SlashTransaction) GetFirstSig() []byte {
	if x != nil {
		return x.FirstSig
	}
	return nil
}

func (x *SlashTransaction) GetSecondMsg() []byte {
	if x != nil {
		return x.SecondMsg
	}
	return nil
}

func (x *SlashTransaction) GetSecondSig() []byte {
	if x != nil {
		return x.SecondSig
	}
	return nil
}

func (x *SlashTransaction) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

// StakeTransaction is the transaction for the Stake used by the Provisioners to engage in committees
type StakeTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlsKey           []byte       `protobuf:"bytes,1,opt,name=bls_key,json=blsKey,proto3" json:"bls_key,omitempty"`
	Value            uint64       `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"` // Should be the leftover value that was burned in `tx`
	ExpirationHeight uint64       `protobuf:"fixed64,3,opt,name=expiration_height,json=expirationHeight,proto3" json:"expiration_height,omitempty"`
	Tx               *Transaction `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *StakeTransaction) Reset() {
	*x = StakeTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeTransaction) ProtoMessage() {}

func (x *StakeTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeTransaction.ProtoReflect.Descriptor instead.
func (*StakeTransaction) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{3}
}

func (x *StakeTransaction) GetBlsKey() []byte {
	if x != nil {
		return x.BlsKey
	}
	return nil
}

func (x *StakeTransaction) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *StakeTransaction) GetExpirationHeight() uint64 {
	if x != nil {
		return x.ExpirationHeight
	}
	return 0
}

func (x *StakeTransaction) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

// BidTransaction is the transaction for the Bid used by the Block Generator to create a Score
type BidTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M                []byte       `protobuf:"bytes,1,opt,name=m,proto3" json:"m,omitempty"`
	Commitment       []byte       `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
	EncryptedValue   []byte       `protobuf:"bytes,3,opt,name=encrypted_value,json=encryptedValue,proto3" json:"encrypted_value,omitempty"`
	EncryptedBlinder []byte       `protobuf:"bytes,4,opt,name=encrypted_blinder,json=encryptedBlinder,proto3" json:"encrypted_blinder,omitempty"`
	ExpirationHeight uint64       `protobuf:"fixed64,5,opt,name=expiration_height,json=expirationHeight,proto3" json:"expiration_height,omitempty"`
	Pk               []byte       `protobuf:"bytes,6,opt,name=pk,proto3" json:"pk,omitempty"`
	R                []byte       `protobuf:"bytes,7,opt,name=r,proto3" json:"r,omitempty"`
	Seed             []byte       `protobuf:"bytes,8,opt,name=seed,proto3" json:"seed,omitempty"`
	Tx               *Transaction `protobuf:"bytes,9,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *BidTransaction) Reset() {
	*x = BidTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidTransaction) ProtoMessage() {}

func (x *BidTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidTransaction.ProtoReflect.Descriptor instead.
func (*BidTransaction) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{4}
}

func (x *BidTransaction) GetM() []byte {
	if x != nil {
		return x.M
	}
	return nil
}

func (x *BidTransaction) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *BidTransaction) GetEncryptedValue() []byte {
	if x != nil {
		return x.EncryptedValue
	}
	return nil
}

func (x *BidTransaction) GetEncryptedBlinder() []byte {
	if x != nil {
		return x.EncryptedBlinder
	}
	return nil
}

func (x *BidTransaction) GetExpirationHeight() uint64 {
	if x != nil {
		return x.ExpirationHeight
	}
	return 0
}

func (x *BidTransaction) GetPk() []byte {
	if x != nil {
		return x.Pk
	}
	return nil
}

func (x *BidTransaction) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *BidTransaction) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

func (x *BidTransaction) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

// WithdrawBidTransaction is the transaction to withdraw a bid
type WithdrawBidTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commitment       []byte       `protobuf:"bytes,1,opt,name=commitment,proto3" json:"commitment,omitempty"`
	EncryptedValue   []byte       `protobuf:"bytes,2,opt,name=encrypted_value,json=encryptedValue,proto3" json:"encrypted_value,omitempty"`
	EncryptedBlinder []byte       `protobuf:"bytes,3,opt,name=encrypted_blinder,json=encryptedBlinder,proto3" json:"encrypted_blinder,omitempty"`
	Sig              []byte       `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`
	EdPk             []byte       `protobuf:"bytes,5,opt,name=ed_pk,json=edPk,proto3" json:"ed_pk,omitempty"`
	Tx               *Transaction `protobuf:"bytes,6,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *WithdrawBidTransaction) Reset() {
	*x = WithdrawBidTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawBidTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawBidTransaction) ProtoMessage() {}

func (x *WithdrawBidTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawBidTransaction.ProtoReflect.Descriptor instead.
func (*WithdrawBidTransaction) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{5}
}

func (x *WithdrawBidTransaction) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *WithdrawBidTransaction) GetEncryptedValue() []byte {
	if x != nil {
		return x.EncryptedValue
	}
	return nil
}

func (x *WithdrawBidTransaction) GetEncryptedBlinder() []byte {
	if x != nil {
		return x.EncryptedBlinder
	}
	return nil
}

func (x *WithdrawBidTransaction) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *WithdrawBidTransaction) GetEdPk() []byte {
	if x != nil {
		return x.EdPk
	}
	return nil
}

func (x *WithdrawBidTransaction) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

// WithdrawStakeTransaction is the transaction to withdraw a stake
type WithdrawStakeTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlsKey []byte       `protobuf:"bytes,1,opt,name=bls_key,json=blsKey,proto3" json:"bls_key,omitempty"`
	Sig    []byte       `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	Tx     *Transaction `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *WithdrawStakeTransaction) Reset() {
	*x = WithdrawStakeTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawStakeTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawStakeTransaction) ProtoMessage() {}

func (x *WithdrawStakeTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawStakeTransaction.ProtoReflect.Descriptor instead.
func (*WithdrawStakeTransaction) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{6}
}

func (x *WithdrawStakeTransaction) GetBlsKey() []byte {
	if x != nil {
		return x.BlsKey
	}
	return nil
}

func (x *WithdrawStakeTransaction) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *WithdrawStakeTransaction) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

var File_consensus_proto protoreflect.FileDescriptor

var file_consensus_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x72, 0x75, 0x73, 0x6b, 0x1a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72,
	0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x67,
	0x5f, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x75, 0x73, 0x6b,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x62, 0x67, 0x50, 0x6b,
	0x12, 0x21, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72,
	0x75, 0x73, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x02, 0x74, 0x78, 0x22, 0x79, 0x0a, 0x17, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46,
	0x65, 0x65, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x62, 0x6c, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x62, 0x6c, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x02, 0x74,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x73, 0x6b, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x22, 0xf0,
	0x01, 0x0a, 0x10, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x6c, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x69, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x12, 0x21,
	0x0a, 0x02, 0x74, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x73,
	0x6b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74,
	0x78, 0x22, 0x91, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x73, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x6c, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x21, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x72, 0x75, 0x73, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x02, 0x74, 0x78, 0x22, 0x96, 0x02, 0x0a, 0x0e, 0x42, 0x69, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x01, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x70, 0x6b, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x02, 0x74,
	0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x73, 0x6b, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x22, 0xd8,
	0x01, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x69, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69,
	0x67, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x64, 0x5f, 0x70, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x65, 0x64, 0x50, 0x6b, 0x12, 0x21, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x73, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x22, 0x68, 0x0a, 0x18, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x73, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x6c, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67,
	0x12, 0x21, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72,
	0x75, 0x73, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x02, 0x74, 0x78, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x75, 0x73, 0x6b, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x75, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x72, 0x75, 0x73, 0x6b, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_consensus_proto_rawDescOnce sync.Once
	file_consensus_proto_rawDescData = file_consensus_proto_rawDesc
)

func file_consensus_proto_rawDescGZIP() []byte {
	file_consensus_proto_rawDescOnce.Do(func() {
		file_consensus_proto_rawDescData = protoimpl.X.CompressGZIP(file_consensus_proto_rawDescData)
	})
	return file_consensus_proto_rawDescData
}

var file_consensus_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_consensus_proto_goTypes = []interface{}{
	(*DistributeTransaction)(nil),    // 0: rusk.DistributeTransaction
	(*WithdrawFeesTransaction)(nil),  // 1: rusk.WithdrawFeesTransaction
	(*SlashTransaction)(nil),         // 2: rusk.SlashTransaction
	(*StakeTransaction)(nil),         // 3: rusk.StakeTransaction
	(*BidTransaction)(nil),           // 4: rusk.BidTransaction
	(*WithdrawBidTransaction)(nil),   // 5: rusk.WithdrawBidTransaction
	(*WithdrawStakeTransaction)(nil), // 6: rusk.WithdrawStakeTransaction
	(*PublicKey)(nil),                // 7: rusk.PublicKey
	(*Transaction)(nil),              // 8: rusk.Transaction
}
var file_consensus_proto_depIdxs = []int32{
	7, // 0: rusk.DistributeTransaction.bg_pk:type_name -> rusk.PublicKey
	8, // 1: rusk.DistributeTransaction.tx:type_name -> rusk.Transaction
	8, // 2: rusk.WithdrawFeesTransaction.tx:type_name -> rusk.Transaction
	8, // 3: rusk.SlashTransaction.tx:type_name -> rusk.Transaction
	8, // 4: rusk.StakeTransaction.tx:type_name -> rusk.Transaction
	8, // 5: rusk.BidTransaction.tx:type_name -> rusk.Transaction
	8, // 6: rusk.WithdrawBidTransaction.tx:type_name -> rusk.Transaction
	8, // 7: rusk.WithdrawStakeTransaction.tx:type_name -> rusk.Transaction
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_consensus_proto_init() }
func file_consensus_proto_init() {
	if File_consensus_proto != nil {
		return
	}
	file_transaction_proto_init()
	file_keys_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_consensus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeesTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlashTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawBidTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawStakeTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_consensus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_consensus_proto_goTypes,
		DependencyIndexes: file_consensus_proto_depIdxs,
		MessageInfos:      file_consensus_proto_msgTypes,
	}.Build()
	File_consensus_proto = out.File
	file_consensus_proto_rawDesc = nil
	file_consensus_proto_goTypes = nil
	file_consensus_proto_depIdxs = nil
}
