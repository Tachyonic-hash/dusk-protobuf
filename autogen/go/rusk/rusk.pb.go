// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rusk.proto

package rusk

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EchoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{0}
}
func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (m *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(m, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

type EchoResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{1}
}
func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (m *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(m, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

type BidList struct {
	BidList              [][]byte `protobuf:"bytes,1,rep,name=bid_list,json=bidList,proto3" json:"bid_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidList) Reset()         { *m = BidList{} }
func (m *BidList) String() string { return proto.CompactTextString(m) }
func (*BidList) ProtoMessage()    {}
func (*BidList) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{2}
}
func (m *BidList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidList.Unmarshal(m, b)
}
func (m *BidList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidList.Marshal(b, m, deterministic)
}
func (m *BidList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidList.Merge(m, src)
}
func (m *BidList) XXX_Size() int {
	return xxx_messageInfo_BidList.Size(m)
}
func (m *BidList) XXX_DiscardUnknown() {
	xxx_messageInfo_BidList.DiscardUnknown(m)
}

var xxx_messageInfo_BidList proto.InternalMessageInfo

func (m *BidList) GetBidList() [][]byte {
	if m != nil {
		return m.BidList
	}
	return nil
}

type Stake struct {
	Amount               uint64   `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	StartHeight          uint64   `protobuf:"fixed64,2,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	EndHeight            uint64   `protobuf:"fixed64,3,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stake) Reset()         { *m = Stake{} }
func (m *Stake) String() string { return proto.CompactTextString(m) }
func (*Stake) ProtoMessage()    {}
func (*Stake) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{3}
}
func (m *Stake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stake.Unmarshal(m, b)
}
func (m *Stake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stake.Marshal(b, m, deterministic)
}
func (m *Stake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stake.Merge(m, src)
}
func (m *Stake) XXX_Size() int {
	return xxx_messageInfo_Stake.Size(m)
}
func (m *Stake) XXX_DiscardUnknown() {
	xxx_messageInfo_Stake.DiscardUnknown(m)
}

var xxx_messageInfo_Stake proto.InternalMessageInfo

func (m *Stake) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Stake) GetStartHeight() uint64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *Stake) GetEndHeight() uint64 {
	if m != nil {
		return m.EndHeight
	}
	return 0
}

type Provisioner struct {
	BlsKey               []byte   `protobuf:"bytes,1,opt,name=bls_key,json=blsKey,proto3" json:"bls_key,omitempty"`
	Stakes               []*Stake `protobuf:"bytes,2,rep,name=stakes,proto3" json:"stakes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Provisioner) Reset()         { *m = Provisioner{} }
func (m *Provisioner) String() string { return proto.CompactTextString(m) }
func (*Provisioner) ProtoMessage()    {}
func (*Provisioner) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{4}
}
func (m *Provisioner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provisioner.Unmarshal(m, b)
}
func (m *Provisioner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provisioner.Marshal(b, m, deterministic)
}
func (m *Provisioner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provisioner.Merge(m, src)
}
func (m *Provisioner) XXX_Size() int {
	return xxx_messageInfo_Provisioner.Size(m)
}
func (m *Provisioner) XXX_DiscardUnknown() {
	xxx_messageInfo_Provisioner.DiscardUnknown(m)
}

var xxx_messageInfo_Provisioner proto.InternalMessageInfo

func (m *Provisioner) GetBlsKey() []byte {
	if m != nil {
		return m.BlsKey
	}
	return nil
}

func (m *Provisioner) GetStakes() []*Stake {
	if m != nil {
		return m.Stakes
	}
	return nil
}

// List of transactions to be validated
type ValidateStateTransitionRequest struct {
	Calls                []*ContractCallTx `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
	CurrentHeight        uint64            `protobuf:"fixed64,2,opt,name=current_height,json=currentHeight,proto3" json:"current_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ValidateStateTransitionRequest) Reset()         { *m = ValidateStateTransitionRequest{} }
func (m *ValidateStateTransitionRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateStateTransitionRequest) ProtoMessage()    {}
func (*ValidateStateTransitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{5}
}
func (m *ValidateStateTransitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateStateTransitionRequest.Unmarshal(m, b)
}
func (m *ValidateStateTransitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateStateTransitionRequest.Marshal(b, m, deterministic)
}
func (m *ValidateStateTransitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStateTransitionRequest.Merge(m, src)
}
func (m *ValidateStateTransitionRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateStateTransitionRequest.Size(m)
}
func (m *ValidateStateTransitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStateTransitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStateTransitionRequest proto.InternalMessageInfo

func (m *ValidateStateTransitionRequest) GetCalls() []*ContractCallTx {
	if m != nil {
		return m.Calls
	}
	return nil
}

func (m *ValidateStateTransitionRequest) GetCurrentHeight() uint64 {
	if m != nil {
		return m.CurrentHeight
	}
	return 0
}

type ContractCallTx struct {
	// Types that are valid to be assigned to ContractCall:
	//	*ContractCallTx_Tx
	//	*ContractCallTx_Withdraw
	//	*ContractCallTx_Stake
	//	*ContractCallTx_Bid
	//	*ContractCallTx_Slash
	//	*ContractCallTx_Distribute
	//	*ContractCallTx_WithdrawStake
	//	*ContractCallTx_WithdrawBid
	ContractCall         isContractCallTx_ContractCall `protobuf_oneof:"contract_call"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ContractCallTx) Reset()         { *m = ContractCallTx{} }
func (m *ContractCallTx) String() string { return proto.CompactTextString(m) }
func (*ContractCallTx) ProtoMessage()    {}
func (*ContractCallTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{6}
}
func (m *ContractCallTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractCallTx.Unmarshal(m, b)
}
func (m *ContractCallTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractCallTx.Marshal(b, m, deterministic)
}
func (m *ContractCallTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractCallTx.Merge(m, src)
}
func (m *ContractCallTx) XXX_Size() int {
	return xxx_messageInfo_ContractCallTx.Size(m)
}
func (m *ContractCallTx) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractCallTx.DiscardUnknown(m)
}

var xxx_messageInfo_ContractCallTx proto.InternalMessageInfo

type isContractCallTx_ContractCall interface {
	isContractCallTx_ContractCall()
}

type ContractCallTx_Tx struct {
	Tx *Transaction `protobuf:"bytes,1,opt,name=tx,proto3,oneof" json:"tx,omitempty"`
}
type ContractCallTx_Withdraw struct {
	Withdraw *WithdrawFeesTransaction `protobuf:"bytes,2,opt,name=withdraw,proto3,oneof" json:"withdraw,omitempty"`
}
type ContractCallTx_Stake struct {
	Stake *StakeTransaction `protobuf:"bytes,3,opt,name=stake,proto3,oneof" json:"stake,omitempty"`
}
type ContractCallTx_Bid struct {
	Bid *BidTransaction `protobuf:"bytes,4,opt,name=bid,proto3,oneof" json:"bid,omitempty"`
}
type ContractCallTx_Slash struct {
	Slash *SlashTransaction `protobuf:"bytes,5,opt,name=slash,proto3,oneof" json:"slash,omitempty"`
}
type ContractCallTx_Distribute struct {
	Distribute *DistributeTransaction `protobuf:"bytes,6,opt,name=distribute,proto3,oneof" json:"distribute,omitempty"`
}
type ContractCallTx_WithdrawStake struct {
	WithdrawStake *WithdrawStakeTransaction `protobuf:"bytes,7,opt,name=withdraw_stake,json=withdrawStake,proto3,oneof" json:"withdraw_stake,omitempty"`
}
type ContractCallTx_WithdrawBid struct {
	WithdrawBid *WithdrawBidTransaction `protobuf:"bytes,8,opt,name=withdraw_bid,json=withdrawBid,proto3,oneof" json:"withdraw_bid,omitempty"`
}

func (*ContractCallTx_Tx) isContractCallTx_ContractCall()            {}
func (*ContractCallTx_Withdraw) isContractCallTx_ContractCall()      {}
func (*ContractCallTx_Stake) isContractCallTx_ContractCall()         {}
func (*ContractCallTx_Bid) isContractCallTx_ContractCall()           {}
func (*ContractCallTx_Slash) isContractCallTx_ContractCall()         {}
func (*ContractCallTx_Distribute) isContractCallTx_ContractCall()    {}
func (*ContractCallTx_WithdrawStake) isContractCallTx_ContractCall() {}
func (*ContractCallTx_WithdrawBid) isContractCallTx_ContractCall()   {}

func (m *ContractCallTx) GetContractCall() isContractCallTx_ContractCall {
	if m != nil {
		return m.ContractCall
	}
	return nil
}

func (m *ContractCallTx) GetTx() *Transaction {
	if x, ok := m.GetContractCall().(*ContractCallTx_Tx); ok {
		return x.Tx
	}
	return nil
}

func (m *ContractCallTx) GetWithdraw() *WithdrawFeesTransaction {
	if x, ok := m.GetContractCall().(*ContractCallTx_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *ContractCallTx) GetStake() *StakeTransaction {
	if x, ok := m.GetContractCall().(*ContractCallTx_Stake); ok {
		return x.Stake
	}
	return nil
}

func (m *ContractCallTx) GetBid() *BidTransaction {
	if x, ok := m.GetContractCall().(*ContractCallTx_Bid); ok {
		return x.Bid
	}
	return nil
}

func (m *ContractCallTx) GetSlash() *SlashTransaction {
	if x, ok := m.GetContractCall().(*ContractCallTx_Slash); ok {
		return x.Slash
	}
	return nil
}

func (m *ContractCallTx) GetDistribute() *DistributeTransaction {
	if x, ok := m.GetContractCall().(*ContractCallTx_Distribute); ok {
		return x.Distribute
	}
	return nil
}

func (m *ContractCallTx) GetWithdrawStake() *WithdrawStakeTransaction {
	if x, ok := m.GetContractCall().(*ContractCallTx_WithdrawStake); ok {
		return x.WithdrawStake
	}
	return nil
}

func (m *ContractCallTx) GetWithdrawBid() *WithdrawBidTransaction {
	if x, ok := m.GetContractCall().(*ContractCallTx_WithdrawBid); ok {
		return x.WithdrawBid
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ContractCallTx) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ContractCallTx_Tx)(nil),
		(*ContractCallTx_Withdraw)(nil),
		(*ContractCallTx_Stake)(nil),
		(*ContractCallTx_Bid)(nil),
		(*ContractCallTx_Slash)(nil),
		(*ContractCallTx_Distribute)(nil),
		(*ContractCallTx_WithdrawStake)(nil),
		(*ContractCallTx_WithdrawBid)(nil),
	}
}

// Used to request the Slash of a stake
type SlashTransactionRequest struct {
	// TODO: specify eventual other fields
	Tx                   *NewTransactionRequest `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SlashTransactionRequest) Reset()         { *m = SlashTransactionRequest{} }
func (m *SlashTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SlashTransactionRequest) ProtoMessage()    {}
func (*SlashTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{7}
}
func (m *SlashTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlashTransactionRequest.Unmarshal(m, b)
}
func (m *SlashTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlashTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SlashTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlashTransactionRequest.Merge(m, src)
}
func (m *SlashTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SlashTransactionRequest.Size(m)
}
func (m *SlashTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SlashTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SlashTransactionRequest proto.InternalMessageInfo

func (m *SlashTransactionRequest) GetTx() *NewTransactionRequest {
	if m != nil {
		return m.Tx
	}
	return nil
}

// Used to request the withdrawal of fees from a Provisioner
type DistributeTransactionRequest struct {
	// TODO: specify eventual other fields
	Tx                   *NewTransactionRequest `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DistributeTransactionRequest) Reset()         { *m = DistributeTransactionRequest{} }
func (m *DistributeTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*DistributeTransactionRequest) ProtoMessage()    {}
func (*DistributeTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{8}
}
func (m *DistributeTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributeTransactionRequest.Unmarshal(m, b)
}
func (m *DistributeTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributeTransactionRequest.Marshal(b, m, deterministic)
}
func (m *DistributeTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributeTransactionRequest.Merge(m, src)
}
func (m *DistributeTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_DistributeTransactionRequest.Size(m)
}
func (m *DistributeTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributeTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DistributeTransactionRequest proto.InternalMessageInfo

func (m *DistributeTransactionRequest) GetTx() *NewTransactionRequest {
	if m != nil {
		return m.Tx
	}
	return nil
}

// Used to request the withdrawal of fees from a Provisioner
type WithdrawFeesTransactionRequest struct {
	// TODO: specify eventual other fields
	Tx                   *NewTransactionRequest `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WithdrawFeesTransactionRequest) Reset()         { *m = WithdrawFeesTransactionRequest{} }
func (m *WithdrawFeesTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawFeesTransactionRequest) ProtoMessage()    {}
func (*WithdrawFeesTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{9}
}
func (m *WithdrawFeesTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawFeesTransactionRequest.Unmarshal(m, b)
}
func (m *WithdrawFeesTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawFeesTransactionRequest.Marshal(b, m, deterministic)
}
func (m *WithdrawFeesTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawFeesTransactionRequest.Merge(m, src)
}
func (m *WithdrawFeesTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawFeesTransactionRequest.Size(m)
}
func (m *WithdrawFeesTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawFeesTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawFeesTransactionRequest proto.InternalMessageInfo

func (m *WithdrawFeesTransactionRequest) GetTx() *NewTransactionRequest {
	if m != nil {
		return m.Tx
	}
	return nil
}

// Used to request the withdrawal of a Stake
type WithdrawStakeTransactionRequest struct {
	// TODO: specify eventual other fields
	Tx                   *NewTransactionRequest `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WithdrawStakeTransactionRequest) Reset()         { *m = WithdrawStakeTransactionRequest{} }
func (m *WithdrawStakeTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawStakeTransactionRequest) ProtoMessage()    {}
func (*WithdrawStakeTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{10}
}
func (m *WithdrawStakeTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawStakeTransactionRequest.Unmarshal(m, b)
}
func (m *WithdrawStakeTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawStakeTransactionRequest.Marshal(b, m, deterministic)
}
func (m *WithdrawStakeTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawStakeTransactionRequest.Merge(m, src)
}
func (m *WithdrawStakeTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawStakeTransactionRequest.Size(m)
}
func (m *WithdrawStakeTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawStakeTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawStakeTransactionRequest proto.InternalMessageInfo

func (m *WithdrawStakeTransactionRequest) GetTx() *NewTransactionRequest {
	if m != nil {
		return m.Tx
	}
	return nil
}

// Used to request the withdrawal of a Bid
type WithdrawBidTransactionRequest struct {
	// TODO: specify eventual other fields
	Tx                   *NewTransactionRequest `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WithdrawBidTransactionRequest) Reset()         { *m = WithdrawBidTransactionRequest{} }
func (m *WithdrawBidTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawBidTransactionRequest) ProtoMessage()    {}
func (*WithdrawBidTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{11}
}
func (m *WithdrawBidTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawBidTransactionRequest.Unmarshal(m, b)
}
func (m *WithdrawBidTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawBidTransactionRequest.Marshal(b, m, deterministic)
}
func (m *WithdrawBidTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawBidTransactionRequest.Merge(m, src)
}
func (m *WithdrawBidTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawBidTransactionRequest.Size(m)
}
func (m *WithdrawBidTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawBidTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawBidTransactionRequest proto.InternalMessageInfo

func (m *WithdrawBidTransactionRequest) GetTx() *NewTransactionRequest {
	if m != nil {
		return m.Tx
	}
	return nil
}

// Used to request the creation of a Stake
type StakeTransactionRequest struct {
	BlsKey               []byte                 `protobuf:"bytes,1,opt,name=bls_key,json=blsKey,proto3" json:"bls_key,omitempty"`
	Tx                   *NewTransactionRequest `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StakeTransactionRequest) Reset()         { *m = StakeTransactionRequest{} }
func (m *StakeTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*StakeTransactionRequest) ProtoMessage()    {}
func (*StakeTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{12}
}
func (m *StakeTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakeTransactionRequest.Unmarshal(m, b)
}
func (m *StakeTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakeTransactionRequest.Marshal(b, m, deterministic)
}
func (m *StakeTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakeTransactionRequest.Merge(m, src)
}
func (m *StakeTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_StakeTransactionRequest.Size(m)
}
func (m *StakeTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StakeTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StakeTransactionRequest proto.InternalMessageInfo

func (m *StakeTransactionRequest) GetBlsKey() []byte {
	if m != nil {
		return m.BlsKey
	}
	return nil
}

func (m *StakeTransactionRequest) GetTx() *NewTransactionRequest {
	if m != nil {
		return m.Tx
	}
	return nil
}

// Used to Request the creation of a Bid
type BidTransactionRequest struct {
	K                    []byte                 `protobuf:"bytes,1,opt,name=K,proto3" json:"K,omitempty"`
	EdPk                 []byte                 `protobuf:"bytes,2,opt,name=ed_pk,json=edPk,proto3" json:"ed_pk,omitempty"`
	Seed                 []byte                 `protobuf:"bytes,3,opt,name=seed,proto3" json:"seed,omitempty"`
	ExpirationHeight     uint64                 `protobuf:"fixed64,4,opt,name=expiration_height,json=expirationHeight,proto3" json:"expiration_height,omitempty"`
	Tx                   *NewTransactionRequest `protobuf:"bytes,5,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BidTransactionRequest) Reset()         { *m = BidTransactionRequest{} }
func (m *BidTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*BidTransactionRequest) ProtoMessage()    {}
func (*BidTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{13}
}
func (m *BidTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidTransactionRequest.Unmarshal(m, b)
}
func (m *BidTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidTransactionRequest.Marshal(b, m, deterministic)
}
func (m *BidTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidTransactionRequest.Merge(m, src)
}
func (m *BidTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_BidTransactionRequest.Size(m)
}
func (m *BidTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BidTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BidTransactionRequest proto.InternalMessageInfo

func (m *BidTransactionRequest) GetK() []byte {
	if m != nil {
		return m.K
	}
	return nil
}

func (m *BidTransactionRequest) GetEdPk() []byte {
	if m != nil {
		return m.EdPk
	}
	return nil
}

func (m *BidTransactionRequest) GetSeed() []byte {
	if m != nil {
		return m.Seed
	}
	return nil
}

func (m *BidTransactionRequest) GetExpirationHeight() uint64 {
	if m != nil {
		return m.ExpirationHeight
	}
	return 0
}

func (m *BidTransactionRequest) GetTx() *NewTransactionRequest {
	if m != nil {
		return m.Tx
	}
	return nil
}

type ValidateStateTransitionResponse struct {
	SuccessfulCalls      []int32  `protobuf:"varint,1,rep,packed,name=successful_calls,json=successfulCalls,proto3" json:"successful_calls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateStateTransitionResponse) Reset()         { *m = ValidateStateTransitionResponse{} }
func (m *ValidateStateTransitionResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateStateTransitionResponse) ProtoMessage()    {}
func (*ValidateStateTransitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{14}
}
func (m *ValidateStateTransitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateStateTransitionResponse.Unmarshal(m, b)
}
func (m *ValidateStateTransitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateStateTransitionResponse.Marshal(b, m, deterministic)
}
func (m *ValidateStateTransitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStateTransitionResponse.Merge(m, src)
}
func (m *ValidateStateTransitionResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateStateTransitionResponse.Size(m)
}
func (m *ValidateStateTransitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStateTransitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStateTransitionResponse proto.InternalMessageInfo

func (m *ValidateStateTransitionResponse) GetSuccessfulCalls() []int32 {
	if m != nil {
		return m.SuccessfulCalls
	}
	return nil
}

type ExecuteStateTransitionRequest struct {
	Calls                []*ContractCallTx `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ExecuteStateTransitionRequest) Reset()         { *m = ExecuteStateTransitionRequest{} }
func (m *ExecuteStateTransitionRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteStateTransitionRequest) ProtoMessage()    {}
func (*ExecuteStateTransitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{15}
}
func (m *ExecuteStateTransitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteStateTransitionRequest.Unmarshal(m, b)
}
func (m *ExecuteStateTransitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteStateTransitionRequest.Marshal(b, m, deterministic)
}
func (m *ExecuteStateTransitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteStateTransitionRequest.Merge(m, src)
}
func (m *ExecuteStateTransitionRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteStateTransitionRequest.Size(m)
}
func (m *ExecuteStateTransitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteStateTransitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteStateTransitionRequest proto.InternalMessageInfo

func (m *ExecuteStateTransitionRequest) GetCalls() []*ContractCallTx {
	if m != nil {
		return m.Calls
	}
	return nil
}

type ExecuteStateTransitionResponse struct {
	Success              bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	CurrentHeight        uint64         `protobuf:"fixed64,2,opt,name=current_height,json=currentHeight,proto3" json:"current_height,omitempty"`
	Committee            []*Provisioner `protobuf:"bytes,3,rep,name=committee,proto3" json:"committee,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ExecuteStateTransitionResponse) Reset()         { *m = ExecuteStateTransitionResponse{} }
func (m *ExecuteStateTransitionResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteStateTransitionResponse) ProtoMessage()    {}
func (*ExecuteStateTransitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{16}
}
func (m *ExecuteStateTransitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteStateTransitionResponse.Unmarshal(m, b)
}
func (m *ExecuteStateTransitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteStateTransitionResponse.Marshal(b, m, deterministic)
}
func (m *ExecuteStateTransitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteStateTransitionResponse.Merge(m, src)
}
func (m *ExecuteStateTransitionResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteStateTransitionResponse.Size(m)
}
func (m *ExecuteStateTransitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteStateTransitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteStateTransitionResponse proto.InternalMessageInfo

func (m *ExecuteStateTransitionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ExecuteStateTransitionResponse) GetCurrentHeight() uint64 {
	if m != nil {
		return m.CurrentHeight
	}
	return 0
}

func (m *ExecuteStateTransitionResponse) GetCommittee() []*Provisioner {
	if m != nil {
		return m.Committee
	}
	return nil
}

type GenerateSecretKeyRequest struct {
	B                    []byte   `protobuf:"bytes,1,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateSecretKeyRequest) Reset()         { *m = GenerateSecretKeyRequest{} }
func (m *GenerateSecretKeyRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateSecretKeyRequest) ProtoMessage()    {}
func (*GenerateSecretKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{17}
}
func (m *GenerateSecretKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateSecretKeyRequest.Unmarshal(m, b)
}
func (m *GenerateSecretKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateSecretKeyRequest.Marshal(b, m, deterministic)
}
func (m *GenerateSecretKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateSecretKeyRequest.Merge(m, src)
}
func (m *GenerateSecretKeyRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateSecretKeyRequest.Size(m)
}
func (m *GenerateSecretKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateSecretKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateSecretKeyRequest proto.InternalMessageInfo

func (m *GenerateSecretKeyRequest) GetB() []byte {
	if m != nil {
		return m.B
	}
	return nil
}

type GenerateSecretKeyResponse struct {
	Sk                   *SecretKey `protobuf:"bytes,1,opt,name=sk,proto3" json:"sk,omitempty"`
	Vk                   *ViewKey   `protobuf:"bytes,2,opt,name=vk,proto3" json:"vk,omitempty"`
	Pk                   *PublicKey `protobuf:"bytes,3,opt,name=pk,proto3" json:"pk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GenerateSecretKeyResponse) Reset()         { *m = GenerateSecretKeyResponse{} }
func (m *GenerateSecretKeyResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateSecretKeyResponse) ProtoMessage()    {}
func (*GenerateSecretKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{18}
}
func (m *GenerateSecretKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateSecretKeyResponse.Unmarshal(m, b)
}
func (m *GenerateSecretKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateSecretKeyResponse.Marshal(b, m, deterministic)
}
func (m *GenerateSecretKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateSecretKeyResponse.Merge(m, src)
}
func (m *GenerateSecretKeyResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateSecretKeyResponse.Size(m)
}
func (m *GenerateSecretKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateSecretKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateSecretKeyResponse proto.InternalMessageInfo

func (m *GenerateSecretKeyResponse) GetSk() *SecretKey {
	if m != nil {
		return m.Sk
	}
	return nil
}

func (m *GenerateSecretKeyResponse) GetVk() *ViewKey {
	if m != nil {
		return m.Vk
	}
	return nil
}

func (m *GenerateSecretKeyResponse) GetPk() *PublicKey {
	if m != nil {
		return m.Pk
	}
	return nil
}

// Used for scanning unspent input set
type OwnedNotesResponse struct {
	Notes                []*DecryptedNote `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OwnedNotesResponse) Reset()         { *m = OwnedNotesResponse{} }
func (m *OwnedNotesResponse) String() string { return proto.CompactTextString(m) }
func (*OwnedNotesResponse) ProtoMessage()    {}
func (*OwnedNotesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{19}
}
func (m *OwnedNotesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnedNotesResponse.Unmarshal(m, b)
}
func (m *OwnedNotesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnedNotesResponse.Marshal(b, m, deterministic)
}
func (m *OwnedNotesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnedNotesResponse.Merge(m, src)
}
func (m *OwnedNotesResponse) XXX_Size() int {
	return xxx_messageInfo_OwnedNotesResponse.Size(m)
}
func (m *OwnedNotesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnedNotesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OwnedNotesResponse proto.InternalMessageInfo

func (m *OwnedNotesResponse) GetNotes() []*DecryptedNote {
	if m != nil {
		return m.Notes
	}
	return nil
}

// Call from CLI directly
type NewTransactionRequest struct {
	Sk                   *SecretKey `protobuf:"bytes,1,opt,name=sk,proto3" json:"sk,omitempty"`
	Recipient            *PublicKey `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Value                uint64     `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	Fee                  uint64     `protobuf:"fixed64,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Obfuscated           bool       `protobuf:"varint,5,opt,name=obfuscated,proto3" json:"obfuscated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NewTransactionRequest) Reset()         { *m = NewTransactionRequest{} }
func (m *NewTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*NewTransactionRequest) ProtoMessage()    {}
func (*NewTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{20}
}
func (m *NewTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTransactionRequest.Unmarshal(m, b)
}
func (m *NewTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTransactionRequest.Marshal(b, m, deterministic)
}
func (m *NewTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTransactionRequest.Merge(m, src)
}
func (m *NewTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_NewTransactionRequest.Size(m)
}
func (m *NewTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewTransactionRequest proto.InternalMessageInfo

func (m *NewTransactionRequest) GetSk() *SecretKey {
	if m != nil {
		return m.Sk
	}
	return nil
}

func (m *NewTransactionRequest) GetRecipient() *PublicKey {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *NewTransactionRequest) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *NewTransactionRequest) GetFee() uint64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *NewTransactionRequest) GetObfuscated() bool {
	if m != nil {
		return m.Obfuscated
	}
	return false
}

type VerifyTransactionResponse struct {
	Verified             bool     `protobuf:"varint,1,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyTransactionResponse) Reset()         { *m = VerifyTransactionResponse{} }
func (m *VerifyTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyTransactionResponse) ProtoMessage()    {}
func (*VerifyTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{21}
}
func (m *VerifyTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTransactionResponse.Unmarshal(m, b)
}
func (m *VerifyTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTransactionResponse.Marshal(b, m, deterministic)
}
func (m *VerifyTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTransactionResponse.Merge(m, src)
}
func (m *VerifyTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyTransactionResponse.Size(m)
}
func (m *VerifyTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTransactionResponse proto.InternalMessageInfo

func (m *VerifyTransactionResponse) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type KeysResponse struct {
	Vk                   *ViewKey   `protobuf:"bytes,1,opt,name=vk,proto3" json:"vk,omitempty"`
	Pk                   *PublicKey `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *KeysResponse) Reset()         { *m = KeysResponse{} }
func (m *KeysResponse) String() string { return proto.CompactTextString(m) }
func (*KeysResponse) ProtoMessage()    {}
func (*KeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{22}
}
func (m *KeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeysResponse.Unmarshal(m, b)
}
func (m *KeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeysResponse.Marshal(b, m, deterministic)
}
func (m *KeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeysResponse.Merge(m, src)
}
func (m *KeysResponse) XXX_Size() int {
	return xxx_messageInfo_KeysResponse.Size(m)
}
func (m *KeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeysResponse proto.InternalMessageInfo

func (m *KeysResponse) GetVk() *ViewKey {
	if m != nil {
		return m.Vk
	}
	return nil
}

func (m *KeysResponse) GetPk() *PublicKey {
	if m != nil {
		return m.Pk
	}
	return nil
}

type GenerateScoreRequest struct {
	D                    []byte   `protobuf:"bytes,1,opt,name=d,proto3" json:"d,omitempty"`
	K                    []byte   `protobuf:"bytes,2,opt,name=k,proto3" json:"k,omitempty"`
	Seed                 []byte   `protobuf:"bytes,3,opt,name=seed,proto3" json:"seed,omitempty"`
	EdPk                 []byte   `protobuf:"bytes,4,opt,name=ed_pk,json=edPk,proto3" json:"ed_pk,omitempty"`
	Round                uint64   `protobuf:"fixed64,5,opt,name=round,proto3" json:"round,omitempty"`
	Step                 uint32   `protobuf:"varint,6,opt,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateScoreRequest) Reset()         { *m = GenerateScoreRequest{} }
func (m *GenerateScoreRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateScoreRequest) ProtoMessage()    {}
func (*GenerateScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{23}
}
func (m *GenerateScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateScoreRequest.Unmarshal(m, b)
}
func (m *GenerateScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateScoreRequest.Marshal(b, m, deterministic)
}
func (m *GenerateScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateScoreRequest.Merge(m, src)
}
func (m *GenerateScoreRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateScoreRequest.Size(m)
}
func (m *GenerateScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateScoreRequest proto.InternalMessageInfo

func (m *GenerateScoreRequest) GetD() []byte {
	if m != nil {
		return m.D
	}
	return nil
}

func (m *GenerateScoreRequest) GetK() []byte {
	if m != nil {
		return m.K
	}
	return nil
}

func (m *GenerateScoreRequest) GetSeed() []byte {
	if m != nil {
		return m.Seed
	}
	return nil
}

func (m *GenerateScoreRequest) GetEdPk() []byte {
	if m != nil {
		return m.EdPk
	}
	return nil
}

func (m *GenerateScoreRequest) GetRound() uint64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *GenerateScoreRequest) GetStep() uint32 {
	if m != nil {
		return m.Step
	}
	return 0
}

type GenerateScoreResponse struct {
	Proof                []byte   `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	Score                []byte   `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
	Seed                 []byte   `protobuf:"bytes,3,opt,name=seed,proto3" json:"seed,omitempty"`
	Identity             []byte   `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateScoreResponse) Reset()         { *m = GenerateScoreResponse{} }
func (m *GenerateScoreResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateScoreResponse) ProtoMessage()    {}
func (*GenerateScoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{24}
}
func (m *GenerateScoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateScoreResponse.Unmarshal(m, b)
}
func (m *GenerateScoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateScoreResponse.Marshal(b, m, deterministic)
}
func (m *GenerateScoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateScoreResponse.Merge(m, src)
}
func (m *GenerateScoreResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateScoreResponse.Size(m)
}
func (m *GenerateScoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateScoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateScoreResponse proto.InternalMessageInfo

func (m *GenerateScoreResponse) GetProof() []byte {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (m *GenerateScoreResponse) GetScore() []byte {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *GenerateScoreResponse) GetSeed() []byte {
	if m != nil {
		return m.Seed
	}
	return nil
}

func (m *GenerateScoreResponse) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

type VerifyScoreRequest struct {
	Proof                []byte   `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	Score                []byte   `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
	Seed                 []byte   `protobuf:"bytes,3,opt,name=seed,proto3" json:"seed,omitempty"`
	Identity             []byte   `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
	Round                uint64   `protobuf:"fixed64,5,opt,name=round,proto3" json:"round,omitempty"`
	Step                 uint32   `protobuf:"varint,6,opt,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyScoreRequest) Reset()         { *m = VerifyScoreRequest{} }
func (m *VerifyScoreRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyScoreRequest) ProtoMessage()    {}
func (*VerifyScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{25}
}
func (m *VerifyScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyScoreRequest.Unmarshal(m, b)
}
func (m *VerifyScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyScoreRequest.Marshal(b, m, deterministic)
}
func (m *VerifyScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyScoreRequest.Merge(m, src)
}
func (m *VerifyScoreRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyScoreRequest.Size(m)
}
func (m *VerifyScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyScoreRequest proto.InternalMessageInfo

func (m *VerifyScoreRequest) GetProof() []byte {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (m *VerifyScoreRequest) GetScore() []byte {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *VerifyScoreRequest) GetSeed() []byte {
	if m != nil {
		return m.Seed
	}
	return nil
}

func (m *VerifyScoreRequest) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *VerifyScoreRequest) GetRound() uint64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *VerifyScoreRequest) GetStep() uint32 {
	if m != nil {
		return m.Step
	}
	return 0
}

type VerifyScoreResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyScoreResponse) Reset()         { *m = VerifyScoreResponse{} }
func (m *VerifyScoreResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyScoreResponse) ProtoMessage()    {}
func (*VerifyScoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{26}
}
func (m *VerifyScoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyScoreResponse.Unmarshal(m, b)
}
func (m *VerifyScoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyScoreResponse.Marshal(b, m, deterministic)
}
func (m *VerifyScoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyScoreResponse.Merge(m, src)
}
func (m *VerifyScoreResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyScoreResponse.Size(m)
}
func (m *VerifyScoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyScoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyScoreResponse proto.InternalMessageInfo

func (m *VerifyScoreResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetBalanceRequest struct {
	Vk                   *ViewKey `protobuf:"bytes,1,opt,name=vk,proto3" json:"vk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceRequest) Reset()         { *m = GetBalanceRequest{} }
func (m *GetBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetBalanceRequest) ProtoMessage()    {}
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{27}
}
func (m *GetBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceRequest.Unmarshal(m, b)
}
func (m *GetBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceRequest.Marshal(b, m, deterministic)
}
func (m *GetBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceRequest.Merge(m, src)
}
func (m *GetBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetBalanceRequest.Size(m)
}
func (m *GetBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceRequest proto.InternalMessageInfo

func (m *GetBalanceRequest) GetVk() *ViewKey {
	if m != nil {
		return m.Vk
	}
	return nil
}

type GetBalanceResponse struct {
	Balance              uint64   `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceResponse) Reset()         { *m = GetBalanceResponse{} }
func (m *GetBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetBalanceResponse) ProtoMessage()    {}
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{28}
}
func (m *GetBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceResponse.Unmarshal(m, b)
}
func (m *GetBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceResponse.Marshal(b, m, deterministic)
}
func (m *GetBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceResponse.Merge(m, src)
}
func (m *GetBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetBalanceResponse.Size(m)
}
func (m *GetBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceResponse proto.InternalMessageInfo

func (m *GetBalanceResponse) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type BinaryHashRequest struct {
	Inputs               [][]byte `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinaryHashRequest) Reset()         { *m = BinaryHashRequest{} }
func (m *BinaryHashRequest) String() string { return proto.CompactTextString(m) }
func (*BinaryHashRequest) ProtoMessage()    {}
func (*BinaryHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{29}
}
func (m *BinaryHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryHashRequest.Unmarshal(m, b)
}
func (m *BinaryHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryHashRequest.Marshal(b, m, deterministic)
}
func (m *BinaryHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryHashRequest.Merge(m, src)
}
func (m *BinaryHashRequest) XXX_Size() int {
	return xxx_messageInfo_BinaryHashRequest.Size(m)
}
func (m *BinaryHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryHashRequest proto.InternalMessageInfo

func (m *BinaryHashRequest) GetInputs() [][]byte {
	if m != nil {
		return m.Inputs
	}
	return nil
}

type TransactionHashRequest struct {
	Txs                  []*Transaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransactionHashRequest) Reset()         { *m = TransactionHashRequest{} }
func (m *TransactionHashRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionHashRequest) ProtoMessage()    {}
func (*TransactionHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{30}
}
func (m *TransactionHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionHashRequest.Unmarshal(m, b)
}
func (m *TransactionHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionHashRequest.Marshal(b, m, deterministic)
}
func (m *TransactionHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionHashRequest.Merge(m, src)
}
func (m *TransactionHashRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionHashRequest.Size(m)
}
func (m *TransactionHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionHashRequest proto.InternalMessageInfo

func (m *TransactionHashRequest) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

// HashRequest carries the input for the hashing which can be an array of arrays of bytes or a transaction.
type HashRequest struct {
	// Types that are valid to be assigned to Request:
	//	*HashRequest_BinInputs
	//	*HashRequest_TxInputs
	Request              isHashRequest_Request `protobuf_oneof:"request"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HashRequest) Reset()         { *m = HashRequest{} }
func (m *HashRequest) String() string { return proto.CompactTextString(m) }
func (*HashRequest) ProtoMessage()    {}
func (*HashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{31}
}
func (m *HashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashRequest.Unmarshal(m, b)
}
func (m *HashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashRequest.Marshal(b, m, deterministic)
}
func (m *HashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashRequest.Merge(m, src)
}
func (m *HashRequest) XXX_Size() int {
	return xxx_messageInfo_HashRequest.Size(m)
}
func (m *HashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HashRequest proto.InternalMessageInfo

type isHashRequest_Request interface {
	isHashRequest_Request()
}

type HashRequest_BinInputs struct {
	BinInputs *BinaryHashRequest `protobuf:"bytes,1,opt,name=bin_inputs,json=binInputs,proto3,oneof" json:"bin_inputs,omitempty"`
}
type HashRequest_TxInputs struct {
	TxInputs *TransactionHashRequest `protobuf:"bytes,2,opt,name=tx_inputs,json=txInputs,proto3,oneof" json:"tx_inputs,omitempty"`
}

func (*HashRequest_BinInputs) isHashRequest_Request() {}
func (*HashRequest_TxInputs) isHashRequest_Request()  {}

func (m *HashRequest) GetRequest() isHashRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *HashRequest) GetBinInputs() *BinaryHashRequest {
	if x, ok := m.GetRequest().(*HashRequest_BinInputs); ok {
		return x.BinInputs
	}
	return nil
}

func (m *HashRequest) GetTxInputs() *TransactionHashRequest {
	if x, ok := m.GetRequest().(*HashRequest_TxInputs); ok {
		return x.TxInputs
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HashRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HashRequest_BinInputs)(nil),
		(*HashRequest_TxInputs)(nil),
	}
}

// HashResponse carries the scalar calculated by the hashing function
type HashResponse struct {
	Hash                 *Scalar  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashResponse) Reset()         { *m = HashResponse{} }
func (m *HashResponse) String() string { return proto.CompactTextString(m) }
func (*HashResponse) ProtoMessage()    {}
func (*HashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_211ec4e18343b18f, []int{32}
}
func (m *HashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashResponse.Unmarshal(m, b)
}
func (m *HashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashResponse.Marshal(b, m, deterministic)
}
func (m *HashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashResponse.Merge(m, src)
}
func (m *HashResponse) XXX_Size() int {
	return xxx_messageInfo_HashResponse.Size(m)
}
func (m *HashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HashResponse proto.InternalMessageInfo

func (m *HashResponse) GetHash() *Scalar {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
	proto.RegisterType((*EchoRequest)(nil), "rusk.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "rusk.EchoResponse")
	proto.RegisterType((*BidList)(nil), "rusk.BidList")
	proto.RegisterType((*Stake)(nil), "rusk.Stake")
	proto.RegisterType((*Provisioner)(nil), "rusk.Provisioner")
	proto.RegisterType((*ValidateStateTransitionRequest)(nil), "rusk.ValidateStateTransitionRequest")
	proto.RegisterType((*ContractCallTx)(nil), "rusk.ContractCallTx")
	proto.RegisterType((*SlashTransactionRequest)(nil), "rusk.SlashTransactionRequest")
	proto.RegisterType((*DistributeTransactionRequest)(nil), "rusk.DistributeTransactionRequest")
	proto.RegisterType((*WithdrawFeesTransactionRequest)(nil), "rusk.WithdrawFeesTransactionRequest")
	proto.RegisterType((*WithdrawStakeTransactionRequest)(nil), "rusk.WithdrawStakeTransactionRequest")
	proto.RegisterType((*WithdrawBidTransactionRequest)(nil), "rusk.WithdrawBidTransactionRequest")
	proto.RegisterType((*StakeTransactionRequest)(nil), "rusk.StakeTransactionRequest")
	proto.RegisterType((*BidTransactionRequest)(nil), "rusk.BidTransactionRequest")
	proto.RegisterType((*ValidateStateTransitionResponse)(nil), "rusk.ValidateStateTransitionResponse")
	proto.RegisterType((*ExecuteStateTransitionRequest)(nil), "rusk.ExecuteStateTransitionRequest")
	proto.RegisterType((*ExecuteStateTransitionResponse)(nil), "rusk.ExecuteStateTransitionResponse")
	proto.RegisterType((*GenerateSecretKeyRequest)(nil), "rusk.GenerateSecretKeyRequest")
	proto.RegisterType((*GenerateSecretKeyResponse)(nil), "rusk.GenerateSecretKeyResponse")
	proto.RegisterType((*OwnedNotesResponse)(nil), "rusk.OwnedNotesResponse")
	proto.RegisterType((*NewTransactionRequest)(nil), "rusk.NewTransactionRequest")
	proto.RegisterType((*VerifyTransactionResponse)(nil), "rusk.VerifyTransactionResponse")
	proto.RegisterType((*KeysResponse)(nil), "rusk.KeysResponse")
	proto.RegisterType((*GenerateScoreRequest)(nil), "rusk.GenerateScoreRequest")
	proto.RegisterType((*GenerateScoreResponse)(nil), "rusk.GenerateScoreResponse")
	proto.RegisterType((*VerifyScoreRequest)(nil), "rusk.VerifyScoreRequest")
	proto.RegisterType((*VerifyScoreResponse)(nil), "rusk.VerifyScoreResponse")
	proto.RegisterType((*GetBalanceRequest)(nil), "rusk.GetBalanceRequest")
	proto.RegisterType((*GetBalanceResponse)(nil), "rusk.GetBalanceResponse")
	proto.RegisterType((*BinaryHashRequest)(nil), "rusk.BinaryHashRequest")
	proto.RegisterType((*TransactionHashRequest)(nil), "rusk.TransactionHashRequest")
	proto.RegisterType((*HashRequest)(nil), "rusk.HashRequest")
	proto.RegisterType((*HashResponse)(nil), "rusk.HashResponse")
}

func init() { proto.RegisterFile("rusk.proto", fileDescriptor_211ec4e18343b18f) }

var fileDescriptor_211ec4e18343b18f = []byte{
	// 1584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5b, 0x6f, 0xdb, 0x46,
	0x16, 0xd6, 0xdd, 0xf2, 0x91, 0xe4, 0xcb, 0xc4, 0xb1, 0x65, 0x26, 0xb6, 0xb3, 0xe3, 0x04, 0xf0,
	0x26, 0x88, 0xbd, 0xd0, 0x3e, 0xec, 0x2e, 0x82, 0x20, 0x88, 0x9c, 0x8b, 0x77, 0x95, 0xd5, 0x06,
	0x4c, 0xd6, 0x2d, 0xda, 0x07, 0x81, 0x97, 0xb1, 0x35, 0x10, 0x4d, 0xaa, 0x9c, 0xa1, 0x25, 0x01,
	0x7d, 0xed, 0x73, 0x81, 0x3e, 0xf6, 0x17, 0xf4, 0xa1, 0x40, 0xff, 0x4e, 0x7f, 0x4e, 0x31, 0xc3,
	0x21, 0x45, 0x4a, 0x94, 0xec, 0x1a, 0xed, 0x1b, 0xe7, 0xdc, 0xe6, 0x9c, 0x33, 0x67, 0xbe, 0x33,
	0x87, 0x00, 0x7e, 0xc0, 0x06, 0xc7, 0x43, 0xdf, 0xe3, 0x1e, 0x2a, 0x89, 0x6f, 0xad, 0x76, 0x41,
	0x89, 0x63, 0x87, 0x24, 0x0d, 0x06, 0x64, 0xc2, 0xa2, 0x6f, 0xd7, 0xe3, 0x44, 0x7d, 0x6f, 0x72,
	0xdf, 0x70, 0x99, 0x61, 0x71, 0xea, 0xb9, 0x8a, 0xb4, 0x6e, 0x79, 0x2e, 0x23, 0x2e, 0x0b, 0x94,
	0x3c, 0x6e, 0x40, 0xed, 0xad, 0xd5, 0xf7, 0x74, 0xf2, 0x4d, 0x40, 0x18, 0xc7, 0x6b, 0x50, 0x0f,
	0x97, 0x6c, 0x28, 0x04, 0xf1, 0x63, 0x58, 0x69, 0x53, 0xfb, 0x03, 0x65, 0x1c, 0xed, 0x42, 0xd5,
	0xa4, 0x76, 0xcf, 0xa1, 0x8c, 0x37, 0xf3, 0x8f, 0x8a, 0x47, 0x75, 0x7d, 0xc5, 0x0c, 0x59, 0xd8,
	0x80, 0xf2, 0x27, 0x6e, 0x0c, 0x08, 0xda, 0x86, 0x8a, 0x71, 0xe5, 0x05, 0xae, 0x90, 0xc8, 0x1f,
	0x55, 0x74, 0xb5, 0x42, 0x7f, 0x81, 0x3a, 0xe3, 0x86, 0xcf, 0x7b, 0x7d, 0x42, 0x2f, 0xfb, 0xbc,
	0x59, 0x90, 0xdc, 0x9a, 0xa4, 0x9d, 0x49, 0x12, 0xda, 0x03, 0x20, 0xae, 0x1d, 0x09, 0x14, 0xa5,
	0xc0, 0x2a, 0x71, 0xed, 0x90, 0x8d, 0x3b, 0x50, 0xfb, 0xe8, 0x7b, 0xd7, 0x94, 0x51, 0xcf, 0x25,
	0x3e, 0xda, 0x81, 0x15, 0xd3, 0x61, 0xbd, 0x01, 0x99, 0xc8, 0x9d, 0xea, 0x7a, 0xc5, 0x74, 0x58,
	0x87, 0x4c, 0xd0, 0x21, 0x54, 0x98, 0x70, 0x85, 0x35, 0x0b, 0x8f, 0x8a, 0x47, 0xb5, 0x56, 0xed,
	0x58, 0xe6, 0x4e, 0xba, 0xa7, 0x2b, 0x16, 0x66, 0xb0, 0x7f, 0x6e, 0x38, 0xd4, 0x36, 0x38, 0xf9,
	0xc4, 0x0d, 0x4e, 0x3e, 0x8b, 0x3c, 0x51, 0x91, 0x26, 0x95, 0x07, 0xf4, 0x14, 0xca, 0x96, 0xe1,
	0x38, 0x4c, 0x46, 0x5a, 0x6b, 0x6d, 0x85, 0x56, 0x4e, 0x3d, 0x97, 0xfb, 0x86, 0xc5, 0x4f, 0x0d,
	0xc7, 0xf9, 0x3c, 0xd6, 0x43, 0x11, 0xf4, 0x04, 0xd6, 0xac, 0xc0, 0xf7, 0x89, 0x3b, 0x13, 0x5e,
	0x43, 0x51, 0x55, 0x04, 0xbf, 0x16, 0x61, 0x2d, 0x6d, 0x00, 0x1d, 0x42, 0x81, 0x8f, 0x65, 0x00,
	0xb5, 0xd6, 0x66, 0xb8, 0xc5, 0xe7, 0xe9, 0x91, 0x9d, 0xe5, 0xf4, 0x02, 0x1f, 0xa3, 0x17, 0x50,
	0x1d, 0x51, 0xde, 0xb7, 0x7d, 0x63, 0x24, 0x0d, 0xd7, 0x5a, 0x7b, 0xa1, 0xe8, 0x17, 0x8a, 0xfa,
	0x8e, 0x10, 0x96, 0x56, 0x8b, 0x15, 0xd0, 0x31, 0x94, 0x65, 0xcc, 0x32, 0xa1, 0xb5, 0xd6, 0x76,
	0x22, 0x1b, 0x69, 0x95, 0x50, 0x0c, 0x1d, 0x41, 0xd1, 0xa4, 0x76, 0xb3, 0x24, 0xa5, 0x55, 0xd4,
	0x6d, 0x6a, 0xa7, 0x65, 0x85, 0x88, 0xb4, 0xec, 0x18, 0xac, 0xdf, 0x2c, 0xa7, 0x2c, 0x0b, 0xd2,
	0xac, 0x65, 0x41, 0x43, 0x2f, 0x01, 0x6c, 0xca, 0xb8, 0x4f, 0xcd, 0x80, 0x93, 0x66, 0x45, 0x2a,
	0x3d, 0x08, 0x95, 0xde, 0xc4, 0xf4, 0xb4, 0x66, 0x42, 0x01, 0xbd, 0x87, 0xb5, 0x28, 0xa8, 0x5e,
	0x18, 0xd1, 0x8a, 0x34, 0xb1, 0x9f, 0xce, 0x45, 0x46, 0x64, 0x8d, 0x51, 0x92, 0x87, 0x5e, 0x43,
	0x3d, 0x36, 0x24, 0x42, 0xad, 0x4a, 0x33, 0x0f, 0xd3, 0x66, 0xe6, 0x42, 0xae, 0x8d, 0xa6, 0x9c,
	0xf6, 0x3a, 0x34, 0x2c, 0x75, 0x90, 0x3d, 0x51, 0x02, 0xf8, 0x1d, 0xec, 0xcc, 0x06, 0x1e, 0x15,
	0xd2, 0xb3, 0xc4, 0x11, 0xab, 0x70, 0xbb, 0x64, 0x34, 0x2f, 0x28, 0x8e, 0x1a, 0x77, 0xe0, 0x61,
	0x66, 0x2e, 0xee, 0x64, 0xec, 0xbf, 0xb0, 0xbf, 0xa0, 0x42, 0xee, 0x64, 0xae, 0x0b, 0x07, 0x8b,
	0x92, 0x7c, 0x27, 0x7b, 0x1f, 0x60, 0x2f, 0x3b, 0xdb, 0x77, 0xb2, 0xd6, 0x83, 0x9d, 0x45, 0x5e,
	0x2d, 0x84, 0x8a, 0x70, 0x83, 0xc2, 0xed, 0x36, 0xf8, 0x29, 0x0f, 0xf7, 0xb3, 0xfd, 0xac, 0x43,
	0xbe, 0xa3, 0x2c, 0xe7, 0x3b, 0xe8, 0x1e, 0x94, 0x89, 0xdd, 0x1b, 0x0e, 0xa4, 0xdd, 0xba, 0x5e,
	0x22, 0xf6, 0xc7, 0x01, 0x42, 0x50, 0x62, 0x84, 0xd8, 0xf2, 0x12, 0xd6, 0x75, 0xf9, 0x8d, 0x9e,
	0xc1, 0x26, 0x19, 0x0f, 0xa9, 0x6f, 0x08, 0x5b, 0x11, 0x70, 0x94, 0x24, 0x70, 0x6c, 0x4c, 0x19,
	0x0a, 0x1c, 0x43, 0x57, 0xcb, 0xb7, 0xcd, 0xec, 0xc1, 0x42, 0x74, 0x0b, 0x61, 0x1d, 0xfd, 0x15,
	0x36, 0x58, 0x60, 0x59, 0x84, 0xb1, 0x8b, 0xc0, 0xe9, 0x4d, 0x91, 0xae, 0xac, 0xaf, 0x4f, 0xe9,
	0x02, 0xa4, 0x18, 0xee, 0xc0, 0xde, 0xdb, 0x31, 0xb1, 0x82, 0x3f, 0x02, 0x2a, 0xf1, 0x0f, 0x79,
	0xd8, 0x5f, 0x64, 0x4d, 0xb9, 0xd6, 0x84, 0x15, 0xe5, 0x82, 0x4c, 0x6a, 0x55, 0x8f, 0x96, 0xb7,
	0xc4, 0x59, 0x74, 0x02, 0xab, 0x96, 0x77, 0x75, 0x45, 0x39, 0x27, 0x02, 0xf6, 0x8a, 0x53, 0x6c,
	0x4d, 0x34, 0x10, 0x7d, 0x2a, 0x83, 0x8f, 0xa0, 0xf9, 0x9e, 0xb8, 0xc4, 0x17, 0xf9, 0x22, 0x96,
	0x4f, 0x78, 0x87, 0x4c, 0x12, 0x87, 0x6b, 0x46, 0x87, 0x6b, 0xe2, 0x6f, 0x61, 0x37, 0x43, 0x52,
	0x39, 0x7e, 0x00, 0x05, 0x36, 0x50, 0xf5, 0xba, 0xae, 0xd0, 0x30, 0x16, 0x2a, 0xb0, 0x01, 0xda,
	0x83, 0xc2, 0xf5, 0x40, 0xd5, 0x5b, 0x23, 0x14, 0x38, 0xa7, 0x64, 0x24, 0xd9, 0xd7, 0x03, 0xa1,
	0x3f, 0x1c, 0x28, 0x9c, 0x56, 0xfa, 0x1f, 0x03, 0xd3, 0xa1, 0x96, 0x14, 0x18, 0x0e, 0xf0, 0x2b,
	0x40, 0xff, 0x1b, 0xb9, 0xc4, 0xee, 0x7a, 0x9c, 0xb0, 0xc4, 0x51, 0x96, 0x45, 0xcb, 0x8f, 0xd2,
	0x7f, 0x4f, 0x41, 0x2a, 0xb1, 0xfc, 0xc9, 0x90, 0x87, 0xc2, 0x7a, 0x28, 0x81, 0x7f, 0xc9, 0xc3,
	0xfd, 0xcc, 0xb2, 0xb9, 0xd9, 0xf7, 0xe7, 0xb0, 0xea, 0x13, 0x8b, 0x0e, 0x29, 0x71, 0xb9, 0x0a,
	0x61, 0xce, 0xc7, 0xa9, 0x04, 0xda, 0x82, 0xf2, 0xb5, 0xe1, 0x04, 0x44, 0xf5, 0xf1, 0x70, 0x81,
	0x36, 0xa0, 0x78, 0x41, 0x88, 0x2a, 0x72, 0xf1, 0x89, 0xf6, 0x01, 0x3c, 0xf3, 0x22, 0x60, 0x96,
	0xc1, 0x89, 0x2d, 0xeb, 0xbb, 0xaa, 0x27, 0x28, 0xf8, 0x1f, 0xb0, 0x7b, 0x4e, 0x7c, 0x7a, 0x31,
	0x49, 0xf9, 0xac, 0x22, 0xd7, 0xa0, 0x7a, 0x2d, 0x98, 0x94, 0xd8, 0xaa, 0x54, 0xe2, 0x35, 0xee,
	0x42, 0xbd, 0x43, 0x26, 0xd3, 0x2c, 0x85, 0xb9, 0xcf, 0x2f, 0xcf, 0x7d, 0x61, 0x71, 0xee, 0xbf,
	0xcb, 0xc3, 0x56, 0x7c, 0xf4, 0x96, 0xe7, 0x93, 0x44, 0x81, 0xd8, 0x51, 0x81, 0xd8, 0x62, 0x15,
	0xdd, 0xfc, 0x7c, 0xf6, 0xb5, 0x8f, 0xf1, 0xa1, 0x94, 0xc0, 0x87, 0x2d, 0x28, 0xfb, 0x5e, 0xe0,
	0x86, 0x19, 0xa8, 0xe8, 0xe1, 0x42, 0xaa, 0x73, 0x32, 0x94, 0xbd, 0xb2, 0xa1, 0xcb, 0x6f, 0xcc,
	0xe0, 0xfe, 0x8c, 0x1b, 0x2a, 0xc0, 0x2d, 0x28, 0x0f, 0x7d, 0xcf, 0xbb, 0x50, 0xbe, 0x84, 0x0b,
	0x41, 0x65, 0x42, 0x4c, 0xf9, 0x14, 0x2e, 0x32, 0xfd, 0xd2, 0xa0, 0x4a, 0x6d, 0xe2, 0x72, 0xca,
	0x27, 0xca, 0xb5, 0x78, 0x8d, 0x7f, 0xcc, 0x03, 0x0a, 0x8f, 0x21, 0x15, 0xfa, 0x9f, 0xb8, 0xe5,
	0xef, 0xc8, 0xc8, 0x09, 0xdc, 0x4b, 0xf9, 0x76, 0x13, 0x8c, 0xe0, 0x16, 0x6c, 0xbe, 0x27, 0xbc,
	0x6d, 0x38, 0x86, 0x6b, 0xc5, 0xb1, 0x2c, 0xaf, 0x0f, 0x7c, 0x0c, 0x28, 0xa9, 0x33, 0xdd, 0xc3,
	0x0c, 0x49, 0xea, 0xb9, 0x1b, 0x2d, 0xf1, 0x33, 0xd8, 0x6c, 0x53, 0xd7, 0xf0, 0x27, 0x67, 0x06,
	0xeb, 0x47, 0x7b, 0x6c, 0x43, 0x85, 0xba, 0xc3, 0x80, 0x33, 0xf5, 0x7c, 0x56, 0x2b, 0xfc, 0x12,
	0xb6, 0x93, 0x8f, 0x8d, 0x84, 0xc6, 0x21, 0x14, 0xf9, 0x38, 0xba, 0xd9, 0xf3, 0x0f, 0x44, 0x5d,
	0x70, 0xf1, 0xf7, 0x79, 0xa8, 0x25, 0x95, 0xfe, 0x09, 0x60, 0x52, 0xb7, 0x17, 0x6f, 0x25, 0x42,
	0xda, 0x89, 0x5e, 0x72, 0x33, 0x3e, 0x9d, 0xe5, 0xf4, 0x55, 0x93, 0xba, 0xff, 0x96, 0xb2, 0xe8,
	0x05, 0xac, 0xf2, 0x71, 0xa4, 0x58, 0x48, 0xbe, 0x8b, 0xb2, 0xfd, 0x13, 0x2f, 0x4d, 0x3e, 0x0e,
	0x95, 0xdb, 0xab, 0xb0, 0xe2, 0xab, 0x21, 0xe2, 0x6f, 0x50, 0x0f, 0xa5, 0x54, 0x9e, 0x1e, 0x41,
	0xa9, 0x2f, 0x5e, 0x8a, 0xa1, 0x2f, 0x75, 0x85, 0x2f, 0x96, 0xe1, 0x18, 0xbe, 0x2e, 0x39, 0xad,
	0x9f, 0x6b, 0x50, 0xd2, 0x03, 0x36, 0x40, 0x27, 0x50, 0x12, 0xf3, 0x07, 0x52, 0xc1, 0x26, 0x46,
	0x13, 0x0d, 0x25, 0x49, 0x6a, 0x3c, 0xc9, 0xa1, 0x3e, 0xec, 0x2c, 0x68, 0x76, 0xe8, 0xb1, 0x3a,
	0xc7, 0xa5, 0x2f, 0x7d, 0xed, 0xc9, 0x0d, 0x52, 0xf1, 0x4e, 0x04, 0xb6, 0xb3, 0x5b, 0x17, 0x3a,
	0x54, 0x9e, 0x2d, 0x6b, 0x93, 0xda, 0xe3, 0xe5, 0x42, 0xf1, 0x36, 0xff, 0x81, 0x46, 0xea, 0x86,
	0x23, 0x2d, 0x54, 0xcc, 0x42, 0x1f, 0xed, 0x41, 0x26, 0x2f, 0xb6, 0xf5, 0x06, 0x6a, 0x89, 0xbb,
	0x81, 0x9a, 0x2a, 0xd4, 0xb9, 0xab, 0xac, 0xed, 0x66, 0x70, 0x62, 0x2b, 0xe7, 0xe2, 0xc2, 0xcc,
	0x74, 0x3d, 0xb4, 0x3f, 0xb3, 0xf3, 0x4c, 0xe3, 0xd4, 0x0e, 0x16, 0xf2, 0x63, 0xbb, 0xcf, 0xa1,
	0x24, 0x30, 0x1a, 0xcd, 0x36, 0x9c, 0xe8, 0xa4, 0x93, 0x00, 0x8e, 0x73, 0xe8, 0x15, 0xa0, 0x77,
	0x81, 0xe3, 0x7c, 0xb2, 0x0c, 0x77, 0xda, 0x06, 0x51, 0xfa, 0xb2, 0x6a, 0x2a, 0xc4, 0xf9, 0x3e,
	0x89, 0x73, 0xa8, 0x0d, 0x6b, 0xe9, 0xee, 0x87, 0x96, 0x3d, 0xa5, 0xb4, 0xf9, 0xfb, 0x86, 0x73,
	0xe8, 0x35, 0xc0, 0x14, 0x08, 0xd0, 0x4e, 0x14, 0xe4, 0x0c, 0x9c, 0x44, 0x6e, 0xcc, 0x63, 0x06,
	0xce, 0xa1, 0x0f, 0xb0, 0x39, 0xd7, 0xd3, 0x50, 0xe6, 0xab, 0x29, 0x4a, 0xe2, 0xc2, 0x16, 0x88,
	0x73, 0xe8, 0x14, 0xaa, 0x5d, 0xa2, 0x46, 0x9b, 0xbd, 0xec, 0xe9, 0x2e, 0x72, 0x6a, 0xc1, 0xf0,
	0x87, 0x73, 0xe8, 0x2c, 0xae, 0x93, 0x70, 0x8a, 0xcf, 0x16, 0xbc, 0x8d, 0x3b, 0x5f, 0xc3, 0x46,
	0x97, 0x8c, 0x52, 0x83, 0x02, 0x7a, 0xb2, 0x7c, 0x44, 0x8b, 0xdc, 0xbb, 0x61, 0x92, 0xc3, 0x39,
	0xf4, 0x12, 0x2a, 0x5d, 0x22, 0xa6, 0x85, 0xe8, 0xe0, 0x32, 0x1f, 0xe4, 0x5a, 0xe6, 0xd8, 0x8a,
	0x73, 0xe8, 0xff, 0xf2, 0xfc, 0x13, 0x43, 0x47, 0x74, 0x71, 0x97, 0xce, 0x21, 0xda, 0xd2, 0xd1,
	0x10, 0xe7, 0x90, 0x0e, 0x8d, 0x2e, 0x19, 0x4d, 0xe7, 0x36, 0x84, 0x97, 0x4c, 0xb5, 0x33, 0x17,
	0x37, 0x53, 0x06, 0xe7, 0xd0, 0x97, 0xb0, 0x9e, 0x70, 0x55, 0x8c, 0x6f, 0x11, 0x9a, 0x2d, 0x1f,
	0xe9, 0xb4, 0xe5, 0xbf, 0x06, 0xa6, 0xf5, 0x22, 0x47, 0xf2, 0xbd, 0xec, 0x99, 0x7d, 0xb6, 0x5e,
	0x66, 0xd8, 0x38, 0xd7, 0xfa, 0x17, 0x54, 0x4e, 0xc5, 0xf3, 0xd2, 0x13, 0x78, 0x2d, 0xa0, 0x3e,
	0xc2, 0xeb, 0x44, 0x73, 0x88, 0x6e, 0x71, 0xb2, 0x13, 0xe0, 0x5c, 0xfb, 0xe9, 0x57, 0x47, 0x97,
	0x94, 0xf7, 0x03, 0xf3, 0xd8, 0xf2, 0xae, 0x4e, 0xec, 0x80, 0x0d, 0x9e, 0xcb, 0x1f, 0x51, 0x66,
	0x70, 0x71, 0x62, 0x04, 0xdc, 0xbb, 0x24, 0xee, 0xc9, 0xa5, 0x77, 0x22, 0x54, 0xcd, 0x8a, 0xe4,
	0xfc, 0xfd, 0xb7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x24, 0x2c, 0xf0, 0x98, 0xff, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RuskClient is the client API for Rusk service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuskClient interface {
	// Simple echo request
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
	// Validate a set of contract calls, returning false if at least one of the
	// listed transactions is inconsistent
	ValidateStateTransition(ctx context.Context, in *ValidateStateTransitionRequest, opts ...grpc.CallOption) (*ValidateStateTransitionResponse, error)
	// Execute a set of contract calls, resulting in a mutation of the contract
	// storage.
	ExecuteStateTransition(ctx context.Context, in *ExecuteStateTransitionRequest, opts ...grpc.CallOption) (*ExecuteStateTransitionResponse, error)
	// Generate a proof of blind bid, and a score.
	GenerateScore(ctx context.Context, in *GenerateScoreRequest, opts ...grpc.CallOption) (*GenerateScoreResponse, error)
	// Verify a proof of blind bid, and the associated score
	VerifyScore(ctx context.Context, in *VerifyScoreRequest, opts ...grpc.CallOption) (*VerifyScoreResponse, error)
	// Phoenix stuff
	GenerateSecretKey(ctx context.Context, in *GenerateSecretKeyRequest, opts ...grpc.CallOption) (*GenerateSecretKeyResponse, error)
	Keys(ctx context.Context, in *SecretKey, opts ...grpc.CallOption) (*KeysResponse, error)
	FullScanOwnedNotes(ctx context.Context, in *ViewKey, opts ...grpc.CallOption) (*OwnedNotesResponse, error)
	NewTransaction(ctx context.Context, in *NewTransactionRequest, opts ...grpc.CallOption) (*Transaction, error)
	GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
	VerifyTransaction(ctx context.Context, in *ContractCallTx, opts ...grpc.CallOption) (*VerifyTransactionResponse, error)
	// Stake
	NewStake(ctx context.Context, in *StakeTransactionRequest, opts ...grpc.CallOption) (*StakeTransaction, error)
	VerifyStake(ctx context.Context, in *StakeTransaction, opts ...grpc.CallOption) (*VerifyTransactionResponse, error)
	NewWithdrawStake(ctx context.Context, in *WithdrawStakeTransactionRequest, opts ...grpc.CallOption) (*WithdrawStakeTransaction, error)
	// Bid
	NewBid(ctx context.Context, in *BidTransactionRequest, opts ...grpc.CallOption) (*BidTransaction, error)
	NewWithdrawBid(ctx context.Context, in *WithdrawBidTransactionRequest, opts ...grpc.CallOption) (*WithdrawBidTransaction, error)
	// Distribute
	NewDistribute(ctx context.Context, in *DistributeTransactionRequest, opts ...grpc.CallOption) (*DistributeTransaction, error)
	// WithdrawFee
	NewWithdrawFees(ctx context.Context, in *WithdrawFeesTransactionRequest, opts ...grpc.CallOption) (*WithdrawFeesTransaction, error)
	// Slash
	NewSlash(ctx context.Context, in *SlashTransactionRequest, opts ...grpc.CallOption) (*SlashTransaction, error)
}

type ruskClient struct {
	cc *grpc.ClientConn
}

func NewRuskClient(cc *grpc.ClientConn) RuskClient {
	return &ruskClient{cc}
}

func (c *ruskClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) ValidateStateTransition(ctx context.Context, in *ValidateStateTransitionRequest, opts ...grpc.CallOption) (*ValidateStateTransitionResponse, error) {
	out := new(ValidateStateTransitionResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/ValidateStateTransition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) ExecuteStateTransition(ctx context.Context, in *ExecuteStateTransitionRequest, opts ...grpc.CallOption) (*ExecuteStateTransitionResponse, error) {
	out := new(ExecuteStateTransitionResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/ExecuteStateTransition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) GenerateScore(ctx context.Context, in *GenerateScoreRequest, opts ...grpc.CallOption) (*GenerateScoreResponse, error) {
	out := new(GenerateScoreResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/GenerateScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) VerifyScore(ctx context.Context, in *VerifyScoreRequest, opts ...grpc.CallOption) (*VerifyScoreResponse, error) {
	out := new(VerifyScoreResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/VerifyScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) GenerateSecretKey(ctx context.Context, in *GenerateSecretKeyRequest, opts ...grpc.CallOption) (*GenerateSecretKeyResponse, error) {
	out := new(GenerateSecretKeyResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/GenerateSecretKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) Keys(ctx context.Context, in *SecretKey, opts ...grpc.CallOption) (*KeysResponse, error) {
	out := new(KeysResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/Keys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) FullScanOwnedNotes(ctx context.Context, in *ViewKey, opts ...grpc.CallOption) (*OwnedNotesResponse, error) {
	out := new(OwnedNotesResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/FullScanOwnedNotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewTransaction(ctx context.Context, in *NewTransactionRequest, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	out := new(GetBalanceResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) VerifyTransaction(ctx context.Context, in *ContractCallTx, opts ...grpc.CallOption) (*VerifyTransactionResponse, error) {
	out := new(VerifyTransactionResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/VerifyTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewStake(ctx context.Context, in *StakeTransactionRequest, opts ...grpc.CallOption) (*StakeTransaction, error) {
	out := new(StakeTransaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewStake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) VerifyStake(ctx context.Context, in *StakeTransaction, opts ...grpc.CallOption) (*VerifyTransactionResponse, error) {
	out := new(VerifyTransactionResponse)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/VerifyStake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewWithdrawStake(ctx context.Context, in *WithdrawStakeTransactionRequest, opts ...grpc.CallOption) (*WithdrawStakeTransaction, error) {
	out := new(WithdrawStakeTransaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewWithdrawStake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewBid(ctx context.Context, in *BidTransactionRequest, opts ...grpc.CallOption) (*BidTransaction, error) {
	out := new(BidTransaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewWithdrawBid(ctx context.Context, in *WithdrawBidTransactionRequest, opts ...grpc.CallOption) (*WithdrawBidTransaction, error) {
	out := new(WithdrawBidTransaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewWithdrawBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewDistribute(ctx context.Context, in *DistributeTransactionRequest, opts ...grpc.CallOption) (*DistributeTransaction, error) {
	out := new(DistributeTransaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewDistribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewWithdrawFees(ctx context.Context, in *WithdrawFeesTransactionRequest, opts ...grpc.CallOption) (*WithdrawFeesTransaction, error) {
	out := new(WithdrawFeesTransaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewWithdrawFees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruskClient) NewSlash(ctx context.Context, in *SlashTransactionRequest, opts ...grpc.CallOption) (*SlashTransaction, error) {
	out := new(SlashTransaction)
	err := c.cc.Invoke(ctx, "/rusk.Rusk/NewSlash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuskServer is the server API for Rusk service.
type RuskServer interface {
	// Simple echo request
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
	// Validate a set of contract calls, returning false if at least one of the
	// listed transactions is inconsistent
	ValidateStateTransition(context.Context, *ValidateStateTransitionRequest) (*ValidateStateTransitionResponse, error)
	// Execute a set of contract calls, resulting in a mutation of the contract
	// storage.
	ExecuteStateTransition(context.Context, *ExecuteStateTransitionRequest) (*ExecuteStateTransitionResponse, error)
	// Generate a proof of blind bid, and a score.
	GenerateScore(context.Context, *GenerateScoreRequest) (*GenerateScoreResponse, error)
	// Verify a proof of blind bid, and the associated score
	VerifyScore(context.Context, *VerifyScoreRequest) (*VerifyScoreResponse, error)
	// Phoenix stuff
	GenerateSecretKey(context.Context, *GenerateSecretKeyRequest) (*GenerateSecretKeyResponse, error)
	Keys(context.Context, *SecretKey) (*KeysResponse, error)
	FullScanOwnedNotes(context.Context, *ViewKey) (*OwnedNotesResponse, error)
	NewTransaction(context.Context, *NewTransactionRequest) (*Transaction, error)
	GetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error)
	VerifyTransaction(context.Context, *ContractCallTx) (*VerifyTransactionResponse, error)
	// Stake
	NewStake(context.Context, *StakeTransactionRequest) (*StakeTransaction, error)
	VerifyStake(context.Context, *StakeTransaction) (*VerifyTransactionResponse, error)
	NewWithdrawStake(context.Context, *WithdrawStakeTransactionRequest) (*WithdrawStakeTransaction, error)
	// Bid
	NewBid(context.Context, *BidTransactionRequest) (*BidTransaction, error)
	NewWithdrawBid(context.Context, *WithdrawBidTransactionRequest) (*WithdrawBidTransaction, error)
	// Distribute
	NewDistribute(context.Context, *DistributeTransactionRequest) (*DistributeTransaction, error)
	// WithdrawFee
	NewWithdrawFees(context.Context, *WithdrawFeesTransactionRequest) (*WithdrawFeesTransaction, error)
	// Slash
	NewSlash(context.Context, *SlashTransactionRequest) (*SlashTransaction, error)
}

// UnimplementedRuskServer can be embedded to have forward compatible implementations.
type UnimplementedRuskServer struct {
}

func (*UnimplementedRuskServer) Echo(ctx context.Context, req *EchoRequest) (*EchoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedRuskServer) ValidateStateTransition(ctx context.Context, req *ValidateStateTransitionRequest) (*ValidateStateTransitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateStateTransition not implemented")
}
func (*UnimplementedRuskServer) ExecuteStateTransition(ctx context.Context, req *ExecuteStateTransitionRequest) (*ExecuteStateTransitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteStateTransition not implemented")
}
func (*UnimplementedRuskServer) GenerateScore(ctx context.Context, req *GenerateScoreRequest) (*GenerateScoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateScore not implemented")
}
func (*UnimplementedRuskServer) VerifyScore(ctx context.Context, req *VerifyScoreRequest) (*VerifyScoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyScore not implemented")
}
func (*UnimplementedRuskServer) GenerateSecretKey(ctx context.Context, req *GenerateSecretKeyRequest) (*GenerateSecretKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateSecretKey not implemented")
}
func (*UnimplementedRuskServer) Keys(ctx context.Context, req *SecretKey) (*KeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Keys not implemented")
}
func (*UnimplementedRuskServer) FullScanOwnedNotes(ctx context.Context, req *ViewKey) (*OwnedNotesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FullScanOwnedNotes not implemented")
}
func (*UnimplementedRuskServer) NewTransaction(ctx context.Context, req *NewTransactionRequest) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewTransaction not implemented")
}
func (*UnimplementedRuskServer) GetBalance(ctx context.Context, req *GetBalanceRequest) (*GetBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedRuskServer) VerifyTransaction(ctx context.Context, req *ContractCallTx) (*VerifyTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyTransaction not implemented")
}
func (*UnimplementedRuskServer) NewStake(ctx context.Context, req *StakeTransactionRequest) (*StakeTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewStake not implemented")
}
func (*UnimplementedRuskServer) VerifyStake(ctx context.Context, req *StakeTransaction) (*VerifyTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyStake not implemented")
}
func (*UnimplementedRuskServer) NewWithdrawStake(ctx context.Context, req *WithdrawStakeTransactionRequest) (*WithdrawStakeTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewWithdrawStake not implemented")
}
func (*UnimplementedRuskServer) NewBid(ctx context.Context, req *BidTransactionRequest) (*BidTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewBid not implemented")
}
func (*UnimplementedRuskServer) NewWithdrawBid(ctx context.Context, req *WithdrawBidTransactionRequest) (*WithdrawBidTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewWithdrawBid not implemented")
}
func (*UnimplementedRuskServer) NewDistribute(ctx context.Context, req *DistributeTransactionRequest) (*DistributeTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewDistribute not implemented")
}
func (*UnimplementedRuskServer) NewWithdrawFees(ctx context.Context, req *WithdrawFeesTransactionRequest) (*WithdrawFeesTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewWithdrawFees not implemented")
}
func (*UnimplementedRuskServer) NewSlash(ctx context.Context, req *SlashTransactionRequest) (*SlashTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewSlash not implemented")
}

func RegisterRuskServer(s *grpc.Server, srv RuskServer) {
	s.RegisterService(&_Rusk_serviceDesc, srv)
}

func _Rusk_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_ValidateStateTransition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateStateTransitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).ValidateStateTransition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/ValidateStateTransition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).ValidateStateTransition(ctx, req.(*ValidateStateTransitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_ExecuteStateTransition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteStateTransitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).ExecuteStateTransition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/ExecuteStateTransition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).ExecuteStateTransition(ctx, req.(*ExecuteStateTransitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_GenerateScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).GenerateScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/GenerateScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).GenerateScore(ctx, req.(*GenerateScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_VerifyScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).VerifyScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/VerifyScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).VerifyScore(ctx, req.(*VerifyScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_GenerateSecretKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateSecretKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).GenerateSecretKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/GenerateSecretKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).GenerateSecretKey(ctx, req.(*GenerateSecretKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_Keys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).Keys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/Keys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).Keys(ctx, req.(*SecretKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_FullScanOwnedNotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).FullScanOwnedNotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/FullScanOwnedNotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).FullScanOwnedNotes(ctx, req.(*ViewKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewTransaction(ctx, req.(*NewTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).GetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_VerifyTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContractCallTx)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).VerifyTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/VerifyTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).VerifyTransaction(ctx, req.(*ContractCallTx))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewStake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakeTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewStake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewStake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewStake(ctx, req.(*StakeTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_VerifyStake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StakeTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).VerifyStake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/VerifyStake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).VerifyStake(ctx, req.(*StakeTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewWithdrawStake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawStakeTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewWithdrawStake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewWithdrawStake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewWithdrawStake(ctx, req.(*WithdrawStakeTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BidTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewBid(ctx, req.(*BidTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewWithdrawBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawBidTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewWithdrawBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewWithdrawBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewWithdrawBid(ctx, req.(*WithdrawBidTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewDistribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistributeTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewDistribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewDistribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewDistribute(ctx, req.(*DistributeTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewWithdrawFees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawFeesTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewWithdrawFees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewWithdrawFees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewWithdrawFees(ctx, req.(*WithdrawFeesTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rusk_NewSlash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SlashTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuskServer).NewSlash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Rusk/NewSlash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuskServer).NewSlash(ctx, req.(*SlashTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rusk_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rusk.Rusk",
	HandlerType: (*RuskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Rusk_Echo_Handler,
		},
		{
			MethodName: "ValidateStateTransition",
			Handler:    _Rusk_ValidateStateTransition_Handler,
		},
		{
			MethodName: "ExecuteStateTransition",
			Handler:    _Rusk_ExecuteStateTransition_Handler,
		},
		{
			MethodName: "GenerateScore",
			Handler:    _Rusk_GenerateScore_Handler,
		},
		{
			MethodName: "VerifyScore",
			Handler:    _Rusk_VerifyScore_Handler,
		},
		{
			MethodName: "GenerateSecretKey",
			Handler:    _Rusk_GenerateSecretKey_Handler,
		},
		{
			MethodName: "Keys",
			Handler:    _Rusk_Keys_Handler,
		},
		{
			MethodName: "FullScanOwnedNotes",
			Handler:    _Rusk_FullScanOwnedNotes_Handler,
		},
		{
			MethodName: "NewTransaction",
			Handler:    _Rusk_NewTransaction_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _Rusk_GetBalance_Handler,
		},
		{
			MethodName: "VerifyTransaction",
			Handler:    _Rusk_VerifyTransaction_Handler,
		},
		{
			MethodName: "NewStake",
			Handler:    _Rusk_NewStake_Handler,
		},
		{
			MethodName: "VerifyStake",
			Handler:    _Rusk_VerifyStake_Handler,
		},
		{
			MethodName: "NewWithdrawStake",
			Handler:    _Rusk_NewWithdrawStake_Handler,
		},
		{
			MethodName: "NewBid",
			Handler:    _Rusk_NewBid_Handler,
		},
		{
			MethodName: "NewWithdrawBid",
			Handler:    _Rusk_NewWithdrawBid_Handler,
		},
		{
			MethodName: "NewDistribute",
			Handler:    _Rusk_NewDistribute_Handler,
		},
		{
			MethodName: "NewWithdrawFees",
			Handler:    _Rusk_NewWithdrawFees_Handler,
		},
		{
			MethodName: "NewSlash",
			Handler:    _Rusk_NewSlash_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rusk.proto",
}

// CryptoClient is the client API for Crypto service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CryptoClient interface {
	// Hash performs a Poseidon hashing and returns a scalar
	Hash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashResponse, error)
}

type cryptoClient struct {
	cc *grpc.ClientConn
}

func NewCryptoClient(cc *grpc.ClientConn) CryptoClient {
	return &cryptoClient{cc}
}

func (c *cryptoClient) Hash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashResponse, error) {
	out := new(HashResponse)
	err := c.cc.Invoke(ctx, "/rusk.Crypto/Hash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CryptoServer is the server API for Crypto service.
type CryptoServer interface {
	// Hash performs a Poseidon hashing and returns a scalar
	Hash(context.Context, *HashRequest) (*HashResponse, error)
}

// UnimplementedCryptoServer can be embedded to have forward compatible implementations.
type UnimplementedCryptoServer struct {
}

func (*UnimplementedCryptoServer) Hash(ctx context.Context, req *HashRequest) (*HashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hash not implemented")
}

func RegisterCryptoServer(s *grpc.Server, srv CryptoServer) {
	s.RegisterService(&_Crypto_serviceDesc, srv)
}

func _Crypto_Hash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CryptoServer).Hash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Crypto/Hash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CryptoServer).Hash(ctx, req.(*HashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Crypto_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rusk.Crypto",
	HandlerType: (*CryptoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hash",
			Handler:    _Crypto_Hash_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rusk.proto",
}
