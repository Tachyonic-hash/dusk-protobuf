// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: node.proto

package node

import (
	fmt "fmt"
	math "math"
	proto "github.com/gogo/protobuf/proto"
	context "context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AuthMock struct{}

func (m *AuthMock) CreateSession(ctx context.Context, req *SessionRequest) (*Session, error) {
	res :=
		&Session{
			AccessToken: "nam",
		}
	return res, nil
}
func (m *AuthMock) DropSession(ctx context.Context, req *EmptyRequest) (*GenericResponse, error) {
	res :=
		&GenericResponse{
			Response: "doloribus",
		}
	return res, nil
}

type WalletMock struct{}

func (m *WalletMock) ClearWalletDatabase(ctx context.Context, req *EmptyRequest) (*GenericResponse, error) {
	res :=
		&GenericResponse{
			Response: "tempore",
		}
	return res, nil
}
func (m *WalletMock) GetAddress(ctx context.Context, req *EmptyRequest) (*LoadResponse, error) {
	res :=
		&LoadResponse{
			Key: &PubKey{},
		}
	return res, nil
}
func (m *WalletMock) GetBalance(ctx context.Context, req *EmptyRequest) (*BalanceResponse, error) {
	res :=
		&BalanceResponse{}
	return res, nil
}
func (m *WalletMock) GetTxHistory(ctx context.Context, req *EmptyRequest) (*TxHistoryResponse, error) {
	res :=
		&TxHistoryResponse{
			Records: []*TxRecord{
				&TxRecord{
					Direction:  0,
					Timestamp:  77,
					Type:       5,
					Obfuscated: true,
				},
				&TxRecord{
					Direction:  0,
					Timestamp:  751,
					Type:       4,
					Obfuscated: true,
				},
				&TxRecord{
					Direction:  1,
					Timestamp:  326,
					Type:       5,
					Obfuscated: true,
				},
				&TxRecord{
					Direction:  0,
					Timestamp:  681,
					Type:       1,
					Obfuscated: false,
				},
				&TxRecord{
					Direction:  1,
					Timestamp:  917,
					Type:       7,
					Obfuscated: true,
				},
				&TxRecord{
					Direction:  0,
					Timestamp:  285,
					Type:       4,
					Obfuscated: true,
				},
				&TxRecord{
					Direction:  0,
					Timestamp:  769,
					Type:       0,
					Obfuscated: true,
				},
				&TxRecord{
					Direction:  0,
					Timestamp:  79,
					Type:       5,
					Obfuscated: false,
				},
			},
		}
	return res, nil
}

type MempoolMock struct{}

func (m *MempoolMock) GetUnconfirmedBalance(ctx context.Context, req *GetUnconfirmedBalanceRequest) (*BalanceResponse, error) {
	res :=
		&BalanceResponse{}
	return res, nil
}
func (m *MempoolMock) SelectTx(ctx context.Context, req *SelectRequest) (*SelectResponse, error) {
	res :=
		&SelectResponse{
			Result: []*Tx{
				&Tx{
					Type: 6,
					Id:   "a9ba4708-1194-45c6-a545-aabf65e589bf",
				},
				&Tx{
					Type: 2,
					Id:   "87bb5ba9-1130-49fe-b008-ffd723396ab6",
				},
				&Tx{
					Type: 1,
					Id:   "0ecab49e-c348-4bf8-ac72-20e99d511eec",
				},
				&Tx{
					Type: 7,
					Id:   "8da1fca1-18bb-4524-8f08-17ca1c68f153",
				},
				&Tx{
					Type: 2,
					Id:   "a9a7b97e-ddf5-4d5e-bcae-db7bca6945e2",
				},
				&Tx{
					Type: 1,
					Id:   "cba36ddf-d8df-4dac-912b-7a191e4fbe38",
				},
				&Tx{
					Type: 3,
					Id:   "78b05b24-a08c-4937-a720-c7e8fbef8f6e",
				},
				&Tx{
					Type: 3,
					Id:   "237f3dd7-afbd-4f49-948d-4ffdc2c1e3d4",
				},
			},
		}
	return res, nil
}

type ChainMock struct{}

func (m *ChainMock) RebuildChain(ctx context.Context, req *EmptyRequest) (*GenericResponse, error) {
	res :=
		&GenericResponse{
			Response: "suscipit",
		}
	return res, nil
}
func (m *ChainMock) GetSyncProgress(ctx context.Context, req *EmptyRequest) (*SyncProgressResponse, error) {
	res :=
		&SyncProgressResponse{
			Progress: 319.3741,
		}
	return res, nil
}

type TransactorMock struct{}

func (m *TransactorMock) CallContract(ctx context.Context, req *CallContractRequest) (*TransactionResponse, error) {
	res :=
		&TransactionResponse{}
	return res, nil
}
func (m *TransactorMock) Transfer(ctx context.Context, req *TransferRequest) (*TransactionResponse, error) {
	res :=
		&TransactionResponse{}
	return res, nil
}
func (m *TransactorMock) Bid(ctx context.Context, req *BidRequest) (*TransactionResponse, error) {
	res :=
		&TransactionResponse{}
	return res, nil
}
func (m *TransactorMock) Stake(ctx context.Context, req *StakeRequest) (*TransactionResponse, error) {
	res :=
		&TransactionResponse{}
	return res, nil
}

type ProvisionerMock struct{}

func (m *ProvisionerMock) AutomateStakes(ctx context.Context, req *EmptyRequest) (*GenericResponse, error) {
	res :=
		&GenericResponse{
			Response: "ullam",
		}
	return res, nil
}

type BlockGeneratorMock struct{}

func (m *BlockGeneratorMock) AutomateBids(ctx context.Context, req *EmptyRequest) (*GenericResponse, error) {
	res :=
		&GenericResponse{
			Response: "et",
		}
	return res, nil
}
